[project]
name = "video-vault"
version = "0.1.11"
description = "An application to download any video"
authors = [
    {name = "Winipedia", email = "win.steveker@gmx.de"}
]
readme = "README.md"
requires-python = ">=3.12,<3.14"
dynamic = ["dependencies"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.packages]]
include = "video_vault"

[tool.poetry.dependencies]
yt-dlp = "*"
cryptography = "*"
pyqt-toast-notification = "*"
winipedia-django = "*"
keyring = "*"
winipedia-pyside = "*"
platformdirs = "*"
pyside6 = "*"
imageio-ffmpeg = "*"

[tool.poetry.group.dev.dependencies]
mypy = "*"
bandit = "*"
yt-dlp-types = "*"
pyinstaller = "*"
types-tqdm = "*"
types-pyyaml = "*"
django-stubs = "*"
types-defusedxml = "*"
types-pyinstaller = "*"
pre-commit = "*"
ruff = "*"
types-setuptools = "*"
pytest-mock = "*"
pillow = "*"
pytest-qt = "*"
pytest = "*"

[tool.ruff]
exclude = [".*", "**/migrations/*.py"]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D203", "D213", "COM812", "ANN401"]
fixable = ["ALL"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = true
warn_unreachable = true
show_error_codes = true
files = "."

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.bandit]
exclude_dirs = ["experiment.py"]
